{"version":3,"sources":["tempList.js","components/Recipe.js","components/RecipeSearch.js","components/RecipeList.js","tempDetails.js","components/RecipeDetails.js","App.js","serviceWorker.js","index.js"],"names":["recipes","recipe_id","image_url","title","publisher","source_url","Recipe","this","props","recipe","handleDetails","Fragment","className","src","style","height","alt","type","onClick","href","target","Component","RecipeSearch","value","handleSubmit","handleChange","onSubmit","htmlFor","placeholder","name","onChange","RecipeList","error","map","key","f2f_url","ingredients","publisher_url","RecipeDetails","state","id","url","fetch","data","json","jsData","setState","console","log","handleIndex","rel","item","index","App","base_url","details_id","pageIndex","search","query","displayPage","e","preventDefault","getRecipe","length","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.04309e12.chunk.js","sourcesContent":["export const recipes = [\n  {\n    recipe_id: 35382,\n    image_url:\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\n    publisher: \"Closet Cooking\",\n    source_url:\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\n  },\n  {\n    recipe_id: 35383,\n    image_url:\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\n    publisher: \"Closet Cooking\",\n    source_url:\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\n  },\n  {\n    recipe_id: 35384,\n    image_url:\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\n    publisher: \"Closet Cooking\",\n    source_url:\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\n  }\n];\n","import React, { Component } from 'react'\n\nexport default class Recipe extends Component {\n    render() {\n        const {\n            image_url,\n            title,\n            source_url,\n            publisher,\n            recipe_id\n        } = this.props.recipe\n        \n        const {handleDetails} = this.props\n        \n        return (\n           <React.Fragment>\n               <div className=\"col-10 mx-auto col-md-6 col-lg-4 my-3\">\n                   <div className=\"card\">\n                       <img \n                       src={image_url} \n                       className=\"img-card-top\" \n                       style={{height: \"14rem\"}}\n                       alt=\"\"/>\n\n                       <div className=\"card-body text-capitalize\">\n                           <h6>{title}</h6>\n                           <h6 className=\"text-warning\">\n                               provide by {publisher}\n                           </h6>\n                       </div>\n\n                       <div className=\"card-footer d-flex justify-content-center\" >\n                           <button \n                            type=\"button\" \n                            className=\"btn btn-primary text-capitalize\"\n                            onClick={()=>handleDetails(0, recipe_id)}> details\n                            </button>\n                            <a href={source_url} \n                            className=\"btn btn-success mx-2 text-capitalize\"\n                            target=\"_blank\">\n                            Recipe URL\n                            </a>\n                       </div>\n                   </div>\n               </div>\n           </React.Fragment>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class RecipeSearch extends Component {\n    render() {\n        const {value, handleSubmit, handleChange} = this.props\n        return (\n            <React.Fragment>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-10 mx-auto col-md-8 mt-5 text-center\">\n                            <h1 className=\"text-capitalize\">\n                                search for recipe with {' '} \n                                <strong className=\"text-danger\">Food</strong>\n                            </h1>\n                            <form className=\"mt-4\" onSubmit={handleSubmit}>\n                                <label htmlFor=\"search\" className=\"text-capitalize\">\n                                    type recipe separate by come\n                                </label>\n                                \n                                <div className=\"input-group\">\n                                    <input \n                                        placeholder=\"chicken, onion, potato\" name=\"search\" \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        value={value}\n                                        onChange={handleChange}\n                                        />\n\n                                    <div className=\"input-group-append\">\n                                        <button \n                                        type=\"submit\" \n                                        className=\"input-group-text bg-primary text-white\"\n                                        >\n                                            <i className=\"fas fa-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Recipe from './Recipe'\nimport RecipeSearch from './RecipeSearch'\n\n\nexport default class RecipeList extends Component {\n\n    render() {\n\n    const {\n        recipes, \n        handleDetails, \n        value, \n        handleChange, \n        handleSubmit,\n        error} = this.props\n\n        return (\n            <React.Fragment>\n                <RecipeSearch \n                value={value}\n                handleChange={handleChange}\n                handleSubmit={handleSubmit}\n\n                />\n                <div className=\"container my-5\">\n                    <div className=\"row\">\n                        <div className=\"col-10 mx-auto col-md-6 text-center text-uppercase mb-3\">\n                            <h1 className=\"text-center\">Recipe list</h1>\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                    {error ? (\n                        <h1 className=\"text-danger text-center\">\n                            {error}\n                        </h1>\n                        ):( recipes.map(recipe => {\n                                return(\n                                    <Recipe\n                                        key={recipe.recipe_id}\n                                        recipe={recipe}\n                                        handleDetails={handleDetails}\n                                        />\n                                )\n                            })\n                    )}\n\n                    </div>\n                </div>\n                \n            </React.Fragment>\n        )\n    }\n}\n","export const recipe = {\n  f2f_url: \"http://food2fork.com/view/35382\",\n  image_url:\n    \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n  ingredients: [\n    \"2 jalapeno peppers, cut in half lengthwise and seeded\",\n    \"2 slices sour dough bread\",\n    \"1 tablespoon butter, room temperature\",\n    \"2 tablespoons cream cheese, room temperature\",\n    \"1/2 cup jack and cheddar cheese, shredded\",\n    \"1 tablespoon tortilla chips, crumbled\"\n  ],\n  publisher: \"Closet Cooking\",\n  publisher_url: \"http://closetcooking.com\",\n  source_url:\n    \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\",\n  title: \"Jalapeno Popper Grilled Cheese Sandwich\"\n};\n","import React, { Component } from 'react'\nimport {recipe} from '../tempDetails'\n\nexport default class RecipeDetails extends Component {\n// constructor(props){\n//     super(props)\n\n//     this.state = {\n//         recipe: recipe,\n//         url: `https://www.food2fork.com/api/get?key=73da9d16a9e7481c2866632b7efbeeaa&rId=${this.props.id}`\n//     }\n// }\n\n \n\n//   async componentDidMount(){\n//     try {\n//         const data = await fetch(this.state.url)\n//         const jsData = await data.json()\n        \n//         this.setState({\n//           recipe: jsData.recipe\n//         })\n//       } catch(err){\n//         console.log(err)\n//       }\n//   }\n\n// ALTERNATIVE VERSION \n\nstate = {\n  recipe: recipe\n}\n\nasync componentDidMount(){\n  const id = this.props.id\n  const url = `https://www.food2fork.com/api/get?key=73da9d16a9e7481c2866632b7efbeeaa&rId=${id}`\n  try {\n            const data = await fetch(url)\n            const jsData = await data.json()\n            \n            this.setState(\n              (state,props) => {\n              return {recipe: jsData.recipe}\n            },()=>{}\n            )\n          } catch(err){\n            console.log(err)\n          }\n}\n\n    render() {\n        const {\n          image_url, \n          publisher, \n          publisher_url, \n          source_url, \n          title, \n          ingredients} = this.state.recipe;\n\n        const {handleIndex} = this.props\n        \n          return (\n            <div className=\"container my-5\">\n              <div className=\"row\">\n                <div className=\"col-10 mx-auto col-md-6 my-3\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-warning mb-5 text-capitalize\"\n                    onClick={()=>handleIndex(1)}\n                  >\n                    back to recipe list\n                  </button>\n                  <img src={image_url} className=\"d-block w-100\" alt=\"recipe\" />\n                </div>\n                {/* details */}\n                <div className=\"col-10 mx-auto col-md-6 my-3\">\n                  <h6 className=\"text-uppercase\">{title}</h6>\n                  <h6 className=\"text-warning text-capitalize text-slanted\">\n                    provided by {publisher}\n                  </h6>\n                  <a\n                    href={publisher_url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"btn btn-primary mt-2 text-capitalize\"\n                  >\n                    Publisher Webpage\n                  </a>\n                  <a\n                    href={source_url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"btn btn-success mt-2 mx-3 text-capitalize\"\n                  >\n                    recipe url\n                  </a>\n                  <ul className=\"list-group mt-4\">\n                    <h2 className=\"mt-3 mb-4\">Ingredients</h2>\n                    {ingredients.map((item, index) => {\n                      return (\n                        <li key={index} className=\"list-group-item text-slanted\">\n                          {item}\n                        </li>\n                      );\n                    })}\n                  </ul>\n                </div>\n              </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {recipes} from './tempList'\nimport RecipeList from './components/RecipeList' \nimport RecipeDetails from './components/RecipeDetails' \n\n\nexport default class App extends Component {\n\n  state = {\n    recipes: recipes,\n    url: `https://www.food2fork.com/api/search?key=73da9d16a9e7481c2866632b7efbeeaa`,\n    base_url: 'https://www.food2fork.com/api/search?key=73da9d16a9e7481c2866632b7efbeeaa',\n    details_id: 35384,\n    pageIndex: 1,\n    search: '',\n    query: '&q=',\n    error: ''\n  }\n\n  async getRecipe(){\n    try {\n    const data = await fetch(this.state.url)\n    const jsData = await data.json()\n    if(jsData.recipes.length === 0){\n      this.setState(()=>{\n        return {error: '404'}\n      })\n    }\n    else {\n      this.setState(()=>{\n        return {recipes: jsData.recipes\n        }\n      })\n    }\n \n  } catch(err){\n    console.log(err)\n  }\n  }\n\n  componentDidMount(){\n    this.getRecipe()\n  }\n\n  displayPage =(index)=>{\n    switch(index){\n      default:\n        case 1:\n          return (<RecipeList \n          recipes={this.state.recipes} \n          handleDetails={this.handleDetails}\n          value={this.state.search}\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n          error={this.state.error}\n          />)\n        case 0:\n          return (<RecipeDetails handleIndex={this.handleDetails} id={this.state.details_id}/>)\n    }\n  }\n\n  handleIndex=index=>{\n    this.setState({\n      pageIndex: index\n    })\n  }\n\n  handleDetails=(index,id)=>{\n    this.setState({\n      pageIndex: index,\n      details_id: id\n    })\n  }\n\n  handleChange=e=>{\n    this.setState({\n      search: e.target.value\n      \n      \n    })\n  }\n\n  handleSubmit=e=>{\n    e.preventDefault()\n    const {base_url, query, search} = this.state\n    this.setState(()=>{\n      return {\n        url: `${base_url}${query}${search}`,\n        search: ''\n      }\n    }, ()=>{\n      this.getRecipe()\n    })\n    \n  }\n\n  render() {\n    console.log(this.state.recipes)\n    return (\n      <React.Fragment>\n        {this.displayPage(this.state.pageIndex)}\n        \n      </React.Fragment>\n        \n      \n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}